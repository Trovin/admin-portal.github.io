{"version":3,"sources":["webpack:///src/app/components/form-field/form-field.component.ts","webpack:///src/app/components/form-field/form-field.component.html","webpack:///src/app/components/form-field/form-field.module.ts","webpack:///src/app/components/validation-message/validation-message.component.ts","webpack:///src/app/components/validation-message/validation-message.component.html","webpack:///src/app/components/validation-message/validation-message.module.ts","webpack:///src/app/enums/icon-class.enum.ts","webpack:///src/app/enums/input-type.enum.ts","webpack:///src/app/modules/shared/animations/toggle-slide.animation.ts"],"names":["FormFieldComponent","eRef","faIcon","inputType","showPassword","isFocus","event","nativeElement","contains","target","setupField","icon","setAttribute","SHOW","input","TEXT","PASSWORD","type","getAttribute","isPassword","toggleFieldType","selector","templateUrl","styleUrls","FormFieldModule","declarations","imports","exports","ValidationMessageComponent","invalid","animations","ValidationMessageModule","iconClass","toggleSlideAnimation","maxHeight","opacity"],"mappings":"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","file":"default~containers-pages-private-portal-profile-profile-module~containers-pages-private-portal-workf~03791db4-es5.js","sourcesContent":["import { Component, ContentChild, ElementRef, OnInit, HostListener } from '@angular/core';\r\n\r\nimport { inputType } from '@enums/input-type.enum';\r\nimport { iconClass } from '@enums/icon-class.enum';\r\n\r\n@Component({\r\n  selector: 'app-form-field',\r\n  templateUrl: './form-field.component.html',\r\n  styleUrls: ['./form-field.component.scss']\r\n})\r\nexport class FormFieldComponent implements OnInit {\r\n\r\n  @ContentChild('formIcon', { static: true })\r\n  icon: ElementRef;\r\n\r\n  @ContentChild('formInput', { static: true })\r\n  input: ElementRef;\r\n\r\n  type: string;\r\n  isFocus: boolean;\r\n  isPassword: boolean;\r\n\r\n  faIcon = iconClass;\r\n  inputType = inputType;\r\n  showPassword = false;\r\n\r\n  constructor(private eRef: ElementRef) {\r\n    this.isFocus = false;\r\n  }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  clickOutside(event) {\r\n    this.isFocus = this.eRef.nativeElement.contains(event.target);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setupField();\r\n  }\r\n\r\n  toggleFieldType() {\r\n    this.showPassword = !this.showPassword;\r\n\r\n    if (this.showPassword) {\r\n      this.icon.nativeElement.setAttribute('class', this.faIcon.SHOW);\r\n      this.input.nativeElement.setAttribute('type', this.inputType.TEXT);\r\n    } else {\r\n      this.icon.nativeElement.setAttribute('class', this.faIcon.PASSWORD);\r\n      this.input.nativeElement.setAttribute('type', this.inputType.PASSWORD);\r\n    }\r\n  }\r\n\r\n  private setupField() {\r\n    this.type = this.input.nativeElement.getAttribute('name');\r\n    this.isPassword = this.type === this.inputType.PASSWORD;\r\n  }\r\n\r\n}\r\n","<label class=\"field-label\" [ngClass]=\"{ 'field-label_active': isFocus }\">\r\n  <span (click)=\"isPassword && toggleFieldType()\" class=\"icon-container\">\r\n    <ng-content select=\"[slot=icon]\"></ng-content>\r\n  </span>\r\n  <ng-content></ng-content>\r\n</label>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { FormFieldComponent } from '@components/form-field/form-field.component';\r\n\r\n@NgModule({\r\n  declarations: [FormFieldComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [FormFieldComponent]\r\n})\r\nexport class FormFieldModule { }\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { toggleSlideAnimation } from '@modules/shared/animations/toggle-slide.animation';\r\n\r\n@Component({\r\n  selector: 'app-validation-message',\r\n  templateUrl: './validation-message.component.html',\r\n  styleUrls: ['./validation-message.component.scss'],\r\n  animations: [toggleSlideAnimation]\r\n})\r\nexport class ValidationMessageComponent {\r\n\r\n  @Input() invalid = false;\r\n\r\n}\r\n","<div\r\n  class=\"error-message\"\r\n  [@slideInOut]=\"invalid ? 'in' : 'out'\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ValidationMessageComponent } from '@components/validation-message/validation-message.component';\r\n\r\n@NgModule({\r\n  declarations: [ValidationMessageComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [ValidationMessageComponent]\r\n})\r\nexport class ValidationMessageModule { }\r\n","export enum iconClass {\r\n  SHOW = 'fa fa-eye',\r\n  USER = 'fa fa-user',\r\n  TEXT = 'fa fa-comment',\r\n  EMAIL = 'fa fa-envelope',\r\n  PASSWORD = 'fa fa-lock'\r\n}\r\n","export enum inputType {\r\n  TEXT = 'text',\r\n  NAME = 'name',\r\n  EMAIL = 'email',\r\n  PASSWORD = 'password'\r\n}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  group\r\n} from '@angular/animations';\r\n\r\nexport const toggleSlideAnimation = [\r\n  trigger('slideInOut', [\r\n\r\n    state('in', style({\r\n      maxHeight: '100px',\r\n      opacity: '1'\r\n    })),\r\n\r\n    state('out', style({\r\n      maxHeight: '0px',\r\n      opacity: '0'\r\n    })),\r\n\r\n    transition('in => out', [group([\r\n        animate('400ms ease-in-out', style({\r\n          opacity: '0'\r\n        })),\r\n        animate('600ms ease-in-out', style({\r\n          maxHeight: '0px'\r\n        }))\r\n      ]\r\n    )]),\r\n\r\n    transition('out => in', [group([\r\n        animate('600ms ease-in-out', style({\r\n          maxHeight: '100px'\r\n        })),\r\n        animate('800ms ease-in-out', style({\r\n          opacity: '1'\r\n        }))\r\n      ]\r\n    )])\r\n  ])\r\n\r\n];\r\n"]}