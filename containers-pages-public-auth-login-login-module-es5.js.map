{"version":3,"sources":["webpack:///src/app/containers/common-layers/forms/login-form/login-form.component.ts","webpack:///src/app/containers/common-layers/forms/login-form/login-form.component.html","webpack:///src/app/containers/common-layers/forms/login-form/login-form.module.ts","webpack:///src/app/containers/pages/public/auth/login/login-routing.module.ts","webpack:///src/app/containers/pages/public/auth/login/login.component.ts","webpack:///src/app/containers/pages/public/auth/login/login.component.html","webpack:///src/app/containers/pages/public/auth/login/login.module.ts"],"names":["LoginFormComponent","formBuilder","loginFormSubmit","faIcon","initForm","emit","email","loginForm","value","password","group","required","pattern","controls","onSubmit","selector","templateUrl","LoginFormModule","declarations","imports","exports","loginRoutes","path","component","LoginRoutingModule","forChild","LoginComponent","router","snackBar","authService","stream","headline","data","login","subscribe","navigate","open","duration","panelClass","horizontalPosition","unsubscribe","styleUrls","LoginModule"],"mappings":"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","file":"containers-pages-public-auth-login-login-module-es5.js","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { iconClass } from '@enums/icon-class.enum';\r\n\r\nimport { IAuthFormData } from '@interfaces/auth-form-data.interface';\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html'\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n\r\n  @Output() loginFormSubmit = new EventEmitter<IAuthFormData>();\r\n\r\n  loginForm: FormGroup;\r\n\r\n  faIcon = iconClass;\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  get form() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loginFormSubmit.emit({\r\n      email: this.loginForm.value.email,\r\n      password: this.loginForm.value.password\r\n    });\r\n  }\r\n\r\n  private initForm() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['test@gmail.com', [\r\n        Validators.required,\r\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]\r\n      ],\r\n      password: ['@Test10', [\r\n        Validators.required,\r\n        Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{6,24}')]\r\n      ]\r\n    });\r\n  }\r\n\r\n}\r\n","<form class=\"form\" [formGroup]=\"loginForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n\r\n  <app-form-field>\r\n    <input\r\n      #formInput\r\n      type=\"email\"\r\n      name=\"email\"\r\n      class=\"form-control\"\r\n      placeholder=\"Email\"\r\n      autocomplete=\"on\"\r\n      formControlName=\"email\" />\r\n    <i #formIcon slot=\"icon\" aria-hidden=\"true\" [ngClass]=\"faIcon.EMAIL\"></i>\r\n  </app-form-field>\r\n\r\n  <app-validation-message [invalid]=\"form['email'].invalid && form['email'].touched\">\r\n    Email is invalid\r\n  </app-validation-message>\r\n\r\n  <app-form-field>\r\n    <input\r\n      #formInput\r\n      slot=\"input\"\r\n      type=\"password\"\r\n      name=\"password\"\r\n      class=\"form-control\"\r\n      placeholder=\"Password\"\r\n      autocomplete=\"on\"\r\n      formControlName=\"password\" />\r\n    <i #formIcon slot=\"icon\" aria-hidden=\"true\" [ngClass]=\"faIcon.PASSWORD\"></i>\r\n  </app-form-field>\r\n\r\n  <app-validation-message [invalid]=\"form['password'].invalid && form['password'].touched\">\r\n    * Must contain: lowercase, uppercase, numbers, special characters and have length in range 8 - 24\r\n  </app-validation-message>\r\n\r\n  <app-button context=\"Login\" className=\"btn_submit\" [state]=\"loginForm.invalid\"></app-button>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\nimport { ButtonModule } from '@components/button/button.module';\r\nimport { FormFieldModule } from '@components/form-field/form-field.module';\r\nimport { ValidationMessageModule } from '@components/validation-message/validation-message.module';\r\n\r\nimport { LoginFormComponent } from '@containers/common-layers/forms/login-form/login-form.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginFormComponent],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    ButtonModule,\r\n    FormFieldModule,\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule,\r\n    ValidationMessageModule\r\n  ],\r\n  exports: [LoginFormComponent]\r\n})\r\nexport class LoginFormModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from '@containers/pages/public/auth/login/login.component';\r\n\r\nexport const loginRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(loginRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnDestroy } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '@core/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnDestroy {\r\n\r\n  stream = new Subscription();\r\n  headline = 'Welcome back!';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private snackBar: MatSnackBar,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  login(data) {\r\n    this.stream = this.authService.login(data.email, data.password)\r\n      .subscribe(\r\n        () => this.router.navigate(['portal/home']),\r\n        () => this.snackBar.open('User is not registered', 'Ok', {\r\n          duration: 4000,\r\n          panelClass: ['snackbar'],\r\n          horizontalPosition: 'end'\r\n        })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stream.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"fade-in\">\r\n  <app-large-headline [headline]=\"headline\"></app-large-headline>\r\n  <app-login-form (loginFormSubmit)=\"login($event)\"></app-login-form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { LargeHeadlineModule } from '@components/large-headline/large-headline.module';\r\n\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nimport { LoginComponent } from '@containers/pages/public/auth/login/login.component';\r\nimport { LoginFormModule } from '@containers/common-layers/forms/login-form/login-form.module';\r\nimport { LoginRoutingModule } from '@containers/pages/public/auth/login/login-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginFormModule,\r\n    LoginRoutingModule,\r\n    LargeHeadlineModule,\r\n    MatFormFieldModule,\r\n    MatSnackBarModule\r\n  ],\r\n  exports: [LoginComponent]\r\n})\r\nexport class LoginModule { }\r\n"]}