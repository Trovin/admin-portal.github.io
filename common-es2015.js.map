{"version":3,"sources":["./src/app/components/chart/chart.component.ts","./src/app/components/chart/chart.component.html","./src/app/components/chart/chart.module.ts","./src/app/components/large-headline/large-headline.component.ts","./src/app/components/large-headline/large-headline.component.html","./src/app/components/large-headline/large-headline.module.ts","./src/app/enums/safe-chart-type.enum.ts","./src/app/modules/services/compose-chart-service/compose-chart-data.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Component, Input, ViewChild, OnChanges, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Breakpoint } from '@enums/breakpoint.enum';\r\n\r\nimport { Chart } from 'chart.js';\r\n\r\nimport { safeChartType } from '@enums/safe-chart-type.enum';\r\nimport { AppSettingsService } from '@services/app-settings-service/app-settings.service';\r\n\r\n@Component({\r\n  selector: 'app-chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrls: ['./chart.component.scss']\r\n})\r\nexport class ChartComponent implements OnChanges, OnDestroy {\r\n\r\n  chartType = safeChartType;\r\n\r\n  @ViewChild('canvas', { static: true }) private chartRef;\r\n\r\n  @Input() type = this.chartType.DOUGHNUT;\r\n  @Input() text = '';\r\n  @Input() idKey = '1';\r\n  @Input() labels: string[];\r\n  @Input() values: number[];\r\n  @Input() colors: string[];\r\n  @Input() itemsCount: number;\r\n\r\n  get isDoughnutChart(): boolean {\r\n    return this.type === this.chartType.DOUGHNUT;\r\n  }\r\n\r\n  get showText(): boolean {\r\n    return this.isDoughnutChart && !!this.text;\r\n  }\r\n\r\n  get showLabels(): boolean {\r\n    return this.isDoughnutChart && this.largeScreen;\r\n  }\r\n\r\n  get backgroundColor(): string[] | string {\r\n    return this.isDoughnutChart ? this.colors : this.mainChartColor;\r\n  }\r\n\r\n  chart: Chart;\r\n  currentId: string;\r\n\r\n  stream = new Subscription();\r\n\r\n  largeScreen = true;\r\n\r\n  labelColor = '#8492af';\r\n  innerTextColor = '#a5afc4';\r\n  mainChartColor = 'rgba(47, 80, 168, .7)';\r\n\r\n  composeTitlePlugin = {\r\n    id: 'innerText',\r\n    beforeDraw: (chart: any) => {\r\n      const ctx = chart.chart.ctx;\r\n      const centerX = ((chart.chartArea.left + chart.chartArea.right) / 2);\r\n      const centerY = ((chart.chartArea.top + chart.chartArea.bottom) / 2);\r\n      const text = this.text;\r\n      const ident = this.text.length > 1 ? 10 : 5;\r\n\r\n      ctx.restore();\r\n      ctx.font = 'bold 28px Roboto';\r\n      ctx.fillStyle = this.innerTextColor;\r\n      ctx.textBaseline = 'middle';\r\n\r\n      ctx.fillText(text, centerX - ident, centerY);\r\n      ctx.save();\r\n    }\r\n  };\r\n\r\n  constructor(private settingsService: AppSettingsService) { }\r\n\r\n  ngOnChanges() {\r\n    this.renderChart();\r\n    this.composeTitle();\r\n\r\n    this.stream = this.settingsService.screenSizeObserver\r\n      .subscribe((value) => {\r\n        this.largeScreen = value !== Breakpoint.SM;\r\n        this.renderChart();\r\n      });\r\n  }\r\n\r\n  renderChart() {\r\n    this.chart?.destroy();\r\n    this.composeChart();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stream.unsubscribe();\r\n    Chart.pluginService.unregister(this.composeTitlePlugin);\r\n  }\r\n\r\n  composeChart() {\r\n    this.currentId = 'canvas' + this.idKey;\r\n    this.chart = new Chart(this.chartRef.nativeElement.getContext('2d'), {\r\n      type: this.type,\r\n      data: {\r\n        labels: this.labels,\r\n        datasets: [{\r\n          data: this.values,\r\n          borderWidth: 2,\r\n          borderColor: this.mainChartColor,\r\n          backgroundColor: this.backgroundColor\r\n        }]\r\n      },\r\n      options: {\r\n        plugins: {\r\n          innerText: this.showText\r\n        },\r\n        title: { display: false },\r\n        legend: {\r\n          display: this.showLabels,\r\n          labels: {\r\n            boxWidth: 8,\r\n            padding: 15,\r\n            fontSize: 18,\r\n            fontStyle: '300',\r\n            fontColor: this.labelColor,\r\n            usePointStyle: true,\r\n            fontFamily: 'Roboto'\r\n          },\r\n          align: 'center',\r\n          position: 'right'\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  composeTitle() {\r\n    Chart.pluginService.register(this.composeTitlePlugin);\r\n  }\r\n\r\n}\r\n","<div [hidden]=\"!chart\">\r\n  <canvas #canvas id=\"currentId\"></canvas>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\nimport { ChartComponent } from './chart.component';\r\n\r\n@NgModule({\r\n  declarations: [ChartComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ChartsModule\r\n  ],\r\n  exports: [ChartComponent]\r\n})\r\nexport class ChartModule { }\r\n","import { Component, OnChanges, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-large-headline',\r\n  templateUrl: './large-headline.component.html',\r\n  styleUrls: ['./large-headline.component.scss']\r\n})\r\nexport class LargeHeadlineComponent implements OnChanges {\r\n\r\n  @Input() headline: string;\r\n\r\n  text: string;\r\n  decoratedText: string;\r\n\r\n  ngOnChanges(): void {\r\n    const text = this.headline.split(' ');\r\n    this.decoratedText = text.pop();\r\n    this.text = text.join(' ');\r\n  }\r\n\r\n}\r\n","<h3 class=\"large-headline\">\r\n  {{text}} <span class=\"theme-text\">{{decoratedText}}</span>\r\n</h3>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LargeHeadlineComponent } from '@components/large-headline/large-headline.component';\r\n\r\n@NgModule({\r\n  declarations: [LargeHeadlineComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [LargeHeadlineComponent]\r\n})\r\nexport class LargeHeadlineModule { }\r\n","/* declared types of custom tuned charts */\r\n\r\nexport enum safeChartType {\r\n  PIE = 'pie',\r\n  BAR = 'bar',\r\n  LINE = 'line',\r\n  RADAR = 'radar',\r\n  DOUGHNUT = 'doughnut',\r\n  POLAR_AREA = 'polarArea'\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Task } from '@models/task/task.dto';\r\n\r\nimport { IChartStats } from '@interfaces/chart-stats.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComposeChartDataService {\r\n\r\n  defaultColors = ['#25396e', '#3755a4', '#4164c2', '#4163c2', '#4162c2'];\r\n\r\n  composeData(items: Task[]): IChartStats {\r\n    const newStats: IChartStats = {\r\n      text: '',\r\n      values: [],\r\n      labels: [],\r\n      colors: []\r\n    };\r\n\r\n    if (items.length) {\r\n      newStats.text = String(items.length);\r\n      newStats.colors = this.defaultColors;\r\n\r\n      const labelsSet = new Set();\r\n      items.forEach(item => labelsSet.add(item.status));\r\n      newStats.labels = Array.from(labelsSet);\r\n\r\n      items.forEach(item => {\r\n        const index = newStats.labels.indexOf(item.status);\r\n        newStats.values[index] = newStats.values[index] ? newStats.values[index] + 1 : 1;\r\n      });\r\n    }\r\n\r\n    return newStats;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}